name: Test {{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}
on:
  push:
    branches:
    - master
jobs:
  unittests:
    name: Unittests Python {% raw %}${{ matrix.python-version }}{% endraw %}
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ['3.11']
    services:
      sql_database:
        image: postgres:alpine
        options: >-
          --health-cmd 'pg_isready -U username -d database'
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_DB: database
          POSTGRES_PASSWORD: password
          POSTGRES_USER: username
      redis_database:
        image: redis:alpine
        env:
          REDIS_PASSWORD: password
        options: >-
          --entrypoint 'redis-server --requirepass password'
          --health-cmd 'redis-cli ping'
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      minio_storage:
        image: minio/minio:latest
        env:
          MINIO_ACCESS_KEY: access-key
          MINIO_SECRET_KEY: secret-key
        options: >-
          --health-cmd 'curl -f http://localhost:9000/minio/health/live'
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      DATABASE_URL: postgresql://username:password@sql_database:5432/database
      REDIS_URL: redis://:password@redis_database:6379/1
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '{% raw %}${{ matrix.python-version }}{% endraw %}'
    - run: python3 -m pip install -U pip pytest poetry
    - run: poetry install --all-extras
    - run: poetry run python manage.py migrate
    - run: poetry run pytest -v
