name: Test {{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}
on:
  push:
    branches:
    - master
jobs:
  unittests:
    name: Unittests Python {% raw %}${{ matrix.python-version }}{% endraw %}
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ['3.11']
    services:
      sql_database:
        image: postgres
        options: >-
          --health-cmd "pg_isready -U username -d database"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
        - 15432:5432
        env:
          POSTGRES_DB: database
          POSTGRES_USER: username
          POSTGRES_PASSWORD: password
      redis_database:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_USER: username
        ports:
        - 16379:6379
    env:
      PYTHONHASHSEED: 28739944
      OBJC_DISABLE_INITIALIZE_FORK_SAFETY: yes
      TEMP_DIRECTORY: /tmp
      UPLOAD_DIRECTORY: /media
      LOG_DIRECTORY: /log
      DATABASE_URL: postgres://username:password@localhost:15432/database
      REDIS_URL: redis://localhost:16379/1
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '{% raw %}${{ matrix.python-version }}{% endraw %}'
    - run: python3 -m pip install -U pip pytest poetry
    - run: poetry install --all-extras
    - run: poetry run python manage.py collectstatic --noinput
    - run: poetry run python manage.py migrate
    - run: poetry run pytest -s
