[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]
{% set license_classifiers = {
    'CECILL-B': 'License :: OSI Approved :: CeCILL-B Free Software License Agreement (CECILL-B)',
    'MIT license': 'License :: OSI Approved :: MIT License',
    'BSD license': 'License :: OSI Approved :: BSD License',
    'ISC license': 'License :: OSI Approved :: ISC License (ISCL)',
    'Apache Software License 2.0': 'License :: OSI Approved :: Apache Software License',
    'GNU General Public License v3': 'License :: OSI Approved :: GNU General Public License v3 (GPLv3)'
} %}

[tool.poetry]
authors = ["{{ cookiecutter.full_name.replace('\"', '\\\"') }} <{{ cookiecutter.email }}>"]
classifiers = [
  'Development Status :: 5 - Production/Stable',
  'Operating System :: MacOS :: MacOS X',
  'Operating System :: POSIX :: BSD',
  'Operating System :: POSIX :: Linux',
  'Operating System :: Unix',
  'Framework :: Django :: 3.2',
  'Framework :: Django :: 4.0',
  'Framework :: Django :: 4.1',
{% if cookiecutter.open_source_license in license_classifiers %}  '{{ license_classifiers[cookiecutter.open_source_license] }}',
{% endif %}  'Programming Language :: Python :: 3',
  'Programming Language :: Python :: 3 :: Only',
  'Programming Language :: Python :: 3.9',
  'Programming Language :: Python :: 3.10',
  'Programming Language :: Python :: 3.11'
]
description = "{{ cookiecutter.project_short_description }}"
documentation = 'https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}'
{% if cookiecutter.open_source_license in license_classifiers %}license = "{{ cookiecutter.open_source_license }}"{% else %}license="Proprietary"{% endif %}
maintainers = ["{{ cookiecutter.full_name.replace('\"', '\\\"') }} <{{ cookiecutter.email }}>"]
name = "{{ cookiecutter.project_slug }}"
packages = [{include = "{{ cookiecutter.project_slug }}"}]
readme = "README.md"
repository = 'https://github.com/{{ cookiecutter.github_username }}/{{ cookiecutter.project_slug }}'
version = "{{ cookiecutter.version }}"

[tool.poetry.dependencies]
df_config = "^1.1.6"
django = "^4.1.5"
django-csp = "^3.6"
django-npm = "^1.0.0"
django-pipeline = "^2.0.0"
django-redis = "^5.2.0"
django-redis-sessions = "^0.6.2"
gunicorn = "^20.1.0"
psycopg2 = "^2.9"
python = "^3.9"
whitenoise = "^6.3.0"

[tool.poetry.group.dev.dependencies]
djt-csp = "^0.9.9"
djt-nvu = "^0.9.2"
{% if cookiecutter.use_pytest == 'y' %}pytest = "^7.2.1"
pytest-django = "^4.5.2"
{% endif %}
[tool.poetry.group.doc.dependencies]
sphinx = ">=4,<6"
myst-parser = "^0.18.1"

[tool.poetry.scripts]
{{ cookiecutter.project_slug }}-ctl = 'df_config.manage:manage'
{% if cookiecutter.use_pytest == 'y' %}
[tool.pytest.ini_options]
minversion = "6.0"
testpaths = ["{{ cookiecutter.project_slug }}_tests"]
required_plugins = "pytest-django"
DJANGO_SETTINGS_MODULE = "df_config.config.base"
{% endif %}

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py39, py310, py311

[testenv]
setenv =
    PYTHONPATH = {toxinidir}
{% if cookiecutter.use_pytest == 'y' %}
commands =
    python3 -m pip install -U pip pytest
    pytest --basetemp={envtmpdir}
{% endif %}
"""
